# Generated by Django 5.1.6 on 2025-08-14 02:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_bulkupload_bulkuploaderror'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FraudDetectionRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('VELOCITY', 'Transaction Velocity'), ('AMOUNT_ANOMALY', 'Amount Anomaly'), ('LOCATION_ANOMALY', 'Location Anomaly'), ('PATTERN_ANOMALY', 'Pattern Anomaly'), ('TIME_ANOMALY', 'Time Anomaly'), ('MERCHANT_RISK', 'Merchant Risk'), ('BEHAVIORAL', 'Behavioral Analysis'), ('ML_MODEL', 'Machine Learning Model')], max_length=20)),
                ('severity', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=10)),
                ('parameters', models.JSONField(default=dict, help_text='Rule-specific parameters')),
                ('thresholds', models.JSONField(default=dict, help_text='Alert thresholds')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_block', models.BooleanField(default=False, help_text='Automatically block flagged transactions')),
                ('model_version', models.CharField(blank=True, max_length=50, null=True)),
                ('model_accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('last_trained', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_rules', to='core.company')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('company', 'name')},
            },
        ),
        migrations.CreateModel(
            name='FraudAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('INVESTIGATING', 'Under Investigation'), ('RESOLVED_FRAUD', 'Confirmed Fraud'), ('RESOLVED_LEGITIMATE', 'Legitimate Transaction'), ('FALSE_POSITIVE', 'False Positive'), ('DISMISSED', 'Dismissed')], default='OPEN', max_length=20)),
                ('risk_score', models.DecimalField(decimal_places=2, help_text='Risk score 0-100', max_digits=5)),
                ('confidence_score', models.DecimalField(decimal_places=2, help_text='AI confidence 0-100', max_digits=5)),
                ('alert_reason', models.TextField()),
                ('anomaly_factors', models.JSONField(default=list, help_text='Factors that triggered the alert')),
                ('risk_indicators', models.JSONField(default=dict, help_text='Specific risk indicators')),
                ('investigated_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_notes', models.TextField(blank=True, null=True)),
                ('transaction_blocked', models.BooleanField(default=False)),
                ('customer_notified', models.BooleanField(default=False)),
                ('escalated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_alerts', to='core.company')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_alerts', to='core.transaction')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='fraud_detection.frauddetectionrule')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FraudInvestigation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('case_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('OPEN', 'Open'), ('IN_PROGRESS', 'In Progress'), ('PENDING_INFO', 'Pending Information'), ('ESCALATED', 'Escalated'), ('CLOSED_FRAUD', 'Closed - Fraud Confirmed'), ('CLOSED_LEGITIMATE', 'Closed - Legitimate'), ('CLOSED_INCONCLUSIVE', 'Closed - Inconclusive')], default='OPEN', max_length=20)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='MEDIUM', max_length=10)),
                ('investigation_notes', models.TextField(blank=True, null=True)),
                ('evidence_collected', models.JSONField(default=list)),
                ('external_references', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('assigned_at', models.DateTimeField(blank=True, null=True)),
                ('first_response_at', models.DateTimeField(blank=True, null=True)),
                ('closed_at', models.DateTimeField(blank=True, null=True)),
                ('resolution_summary', models.TextField(blank=True, null=True)),
                ('actions_taken', models.JSONField(default=list)),
                ('lessons_learned', models.TextField(blank=True, null=True)),
                ('alert', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='investigation', to='fraud_detection.fraudalert')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_investigations', to='core.company')),
                ('investigator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FraudMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_transactions', models.IntegerField(default=0)),
                ('flagged_transactions', models.IntegerField(default=0)),
                ('confirmed_fraud', models.IntegerField(default=0)),
                ('false_positives', models.IntegerField(default=0)),
                ('avg_risk_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('high_risk_count', models.IntegerField(default=0)),
                ('blocked_transactions', models.IntegerField(default=0)),
                ('fraud_amount_detected', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('fraud_amount_prevented', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('false_positive_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('model_accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('detection_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('false_positive_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fraud_metrics', to='core.company')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('ANOMALY_DETECTION', 'Anomaly Detection'), ('CLASSIFICATION', 'Fraud Classification'), ('RISK_SCORING', 'Risk Scoring'), ('CLUSTERING', 'Transaction Clustering'), ('NEURAL_NETWORK', 'Neural Network'), ('ENSEMBLE', 'Ensemble Model')], max_length=20)),
                ('version', models.CharField(max_length=50)),
                ('algorithm', models.CharField(max_length=50)),
                ('features', models.JSONField(default=list, help_text='List of features used')),
                ('hyperparameters', models.JSONField(default=dict)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('precision', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('recall', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('f1_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('auc_score', models.DecimalField(blank=True, decimal_places=4, max_digits=5, null=True)),
                ('training_data_size', models.IntegerField(blank=True, null=True)),
                ('training_period_start', models.DateTimeField(blank=True, null=True)),
                ('training_period_end', models.DateTimeField(blank=True, null=True)),
                ('model_file_path', models.CharField(blank=True, max_length=500, null=True)),
                ('model_file_size', models.BigIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_production', models.BooleanField(default=False)),
                ('trained_at', models.DateTimeField(auto_now_add=True)),
                ('deployed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-trained_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='WhitelistEntry',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('entity_type', models.CharField(choices=[('MERCHANT', 'Merchant'), ('IP_ADDRESS', 'IP Address'), ('ACCOUNT', 'Account'), ('TRANSACTION_PATTERN', 'Transaction Pattern'), ('DEVICE', 'Device')], max_length=20)),
                ('entity_value', models.CharField(max_length=255)),
                ('entity_details', models.JSONField(default=dict)),
                ('reason', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='whitelist_entries', to='core.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BehavioralProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_transaction_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('std_transaction_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('typical_transaction_times', models.JSONField(default=list)),
                ('typical_transaction_days', models.JSONField(default=list)),
                ('frequent_merchants', models.JSONField(default=list)),
                ('typical_categories', models.JSONField(default=list)),
                ('geographical_patterns', models.JSONField(default=dict)),
                ('max_daily_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('max_daily_count', models.IntegerField(default=0)),
                ('avg_time_between_transactions', models.DurationField(blank=True, null=True)),
                ('risk_indicators', models.JSONField(default=dict)),
                ('anomaly_threshold', models.DecimalField(decimal_places=2, default=75.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_profile', to='core.account')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='behavioral_profiles', to='core.company')),
            ],
            options={
                'ordering': ['-last_updated'],
                'unique_together': {('company', 'account')},
            },
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['company', 'status', 'created_at'], name='fraud_detec_company_59dd4b_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['risk_score', 'created_at'], name='fraud_detec_risk_sc_edd0eb_idx'),
        ),
        migrations.AddIndex(
            model_name='fraudalert',
            index=models.Index(fields=['transaction', 'created_at'], name='fraud_detec_transac_5851a7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='fraudmetrics',
            unique_together={('company', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='whitelistentry',
            unique_together={('company', 'entity_type', 'entity_value')},
        ),
    ]
