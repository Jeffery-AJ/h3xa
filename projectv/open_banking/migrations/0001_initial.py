# Generated by Django 5.1.6 on 2025-08-14 02:58

import django.db.models.deletion
import encrypted_model_fields.fields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0002_bulkupload_bulkuploaderror'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('UK_OPEN_BANKING', 'UK Open Banking'), ('PSD2_EU', 'PSD2 European'), ('PLAID', 'Plaid (US)'), ('YODLEE', 'Yodlee'), ('SALTEDGE', 'Salt Edge'), ('TINK', 'Tink'), ('TRUELAYER', 'TrueLayer'), ('YAPILY', 'Yapily'), ('NORDIGEN', 'Nordigen')], max_length=20)),
                ('country_code', models.CharField(max_length=3)),
                ('base_url', models.URLField()),
                ('api_version', models.CharField(default='v1', max_length=10)),
                ('is_sandbox', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('supports_payments', models.BooleanField(default=False)),
                ('supports_account_info', models.BooleanField(default=True)),
                ('rate_limit_per_minute', models.IntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BankConnection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('bank_logo_url', models.URLField(blank=True, null=True)),
                ('access_token', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('refresh_token', encrypted_model_fields.fields.EncryptedTextField(blank=True, null=True)),
                ('consent_id', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('status', models.CharField(choices=[('CONNECTING', 'Connecting'), ('CONNECTED', 'Connected'), ('EXPIRED', 'Expired'), ('REVOKED', 'Revoked'), ('ERROR', 'Error'), ('REFRESH_REQUIRED', 'Refresh Required')], default='CONNECTING', max_length=20)),
                ('consent_expires_at', models.DateTimeField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('next_sync', models.DateTimeField(blank=True, null=True)),
                ('institution_id', models.CharField(blank=True, max_length=100, null=True)),
                ('request_id', models.CharField(blank=True, max_length=100, null=True)),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('auto_sync_enabled', models.BooleanField(default=True)),
                ('sync_frequency_hours', models.IntegerField(default=24)),
                ('include_pending', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_connections', to='core.company')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='open_banking.bankprovider')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('company', 'bank_name', 'provider')},
            },
        ),
        migrations.CreateModel(
            name='PaymentInitiation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payment_type', models.CharField(choices=[('SINGLE', 'Single Payment'), ('BULK', 'Bulk Payment'), ('STANDING_ORDER', 'Standing Order'), ('SCHEDULED', 'Scheduled Payment')], max_length=20)),
                ('status', models.CharField(choices=[('INITIATED', 'Initiated'), ('PENDING', 'Pending'), ('AUTHORIZED', 'Authorized'), ('EXECUTED', 'Executed'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled'), ('REJECTED', 'Rejected')], default='INITIATED', max_length=15)),
                ('external_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('recipient_name', models.CharField(max_length=100)),
                ('recipient_account', encrypted_model_fields.fields.EncryptedCharField()),
                ('recipient_sort_code', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('recipient_iban', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('requested_execution_date', models.DateField(blank=True, null=True)),
                ('executed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='open_banking.bankconnection')),
                ('local_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SyncLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('sync_type', models.CharField(choices=[('ACCOUNTS', 'Accounts'), ('TRANSACTIONS', 'Transactions'), ('BALANCES', 'Balances'), ('FULL', 'Full Sync')], max_length=20)),
                ('status', models.CharField(choices=[('STARTED', 'Started'), ('SUCCESS', 'Success'), ('PARTIAL', 'Partial Success'), ('FAILED', 'Failed')], default='STARTED', max_length=10)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('records_processed', models.IntegerField(default=0)),
                ('records_created', models.IntegerField(default=0)),
                ('records_updated', models.IntegerField(default=0)),
                ('records_failed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('error_details', models.JSONField(blank=True, default=dict)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='open_banking.bankconnection')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ConsentManagement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consent_type', models.CharField(choices=[('ACCOUNT_INFO', 'Account Information'), ('PAYMENT_INITIATION', 'Payment Initiation'), ('TRANSACTION_HISTORY', 'Transaction History'), ('BALANCE_CHECK', 'Balance Check')], max_length=20)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('GRANTED', 'Granted'), ('EXPIRED', 'Expired'), ('REVOKED', 'Revoked'), ('REJECTED', 'Rejected')], default='PENDING', max_length=10)),
                ('external_consent_id', models.CharField(blank=True, max_length=100, null=True)),
                ('consent_url', models.URLField(blank=True, null=True)),
                ('granted_at', models.DateTimeField(blank=True, null=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('permissions', models.JSONField(default=list)),
                ('restrictions', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to='open_banking.bankconnection')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('connection', 'consent_type')},
            },
        ),
        migrations.CreateModel(
            name='LinkedBankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('external_account_id', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('CURRENT', 'Current Account'), ('SAVINGS', 'Savings Account'), ('CREDIT_CARD', 'Credit Card'), ('LOAN', 'Loan Account'), ('MORTGAGE', 'Mortgage'), ('INVESTMENT', 'Investment Account'), ('PENSION', 'Pension'), ('OTHER', 'Other')], max_length=20)),
                ('account_number', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('sort_code', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('iban', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('bic', encrypted_model_fields.fields.EncryptedCharField(blank=True, null=True)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('available_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('credit_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_transactions', models.BooleanField(default=True)),
                ('last_transaction_sync', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_accounts', to='open_banking.bankconnection')),
                ('local_account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bank_link', to='core.account')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('connection', 'external_account_id')},
            },
        ),
    ]
