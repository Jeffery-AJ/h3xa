# Generated by Django 5.1.6 on 2025-08-13 13:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIAnalysisLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operation_type', models.CharField(choices=[('CATEGORIZATION', 'Transaction Categorization'), ('ANOMALY_DETECTION', 'Anomaly Detection'), ('HEALTH_SCORING', 'Financial Health Scoring'), ('BUDGET_INSIGHTS', 'Budget Insights'), ('GOAL_RECOMMENDATION', 'Goal Recommendation'), ('PREDICTION', 'Financial Prediction')], max_length=25)),
                ('status', models.CharField(choices=[('SUCCESS', 'Success'), ('FAILED', 'Failed'), ('PARTIAL', 'Partial Success')], max_length=20)),
                ('processing_time', models.FloatField(help_text='Processing time in seconds')),
                ('tokens_used', models.IntegerField(default=0, help_text='OpenAI tokens used')),
                ('error_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(default=dict, help_text='Additional operation data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnomalyDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anomaly_type', models.CharField(choices=[('AMOUNT_UNUSUAL', 'Unusual Amount'), ('MERCHANT_UNKNOWN', 'Unknown Merchant'), ('TIME_UNUSUAL', 'Unusual Timing'), ('FREQUENCY_HIGH', 'High Frequency'), ('PATTERN_BREAK', 'Pattern Break'), ('FRAUD_RISK', 'Fraud Risk')], max_length=20)),
                ('confidence_score', models.FloatField(help_text='Confidence score 0-1')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=10)),
                ('explanation', models.TextField(help_text='AI explanation of the anomaly')),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('is_false_positive', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='anomaly_data', to='core.transaction')),
            ],
            options={
                'ordering': ['-detected_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insight_type', models.CharField(choices=[('OVERSPEND', 'Overspending Alert'), ('UNDERSPEND', 'Underspending Notice'), ('TREND', 'Spending Trend'), ('OPTIMIZATION', 'Optimization Opportunity'), ('FORECAST', 'Budget Forecast')], max_length=20)),
                ('severity', models.CharField(choices=[('INFO', 'Information'), ('WARNING', 'Warning'), ('CRITICAL', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField(help_text='Human-readable insight message')),
                ('recommended_action', models.TextField(help_text='What user should do')),
                ('impact_score', models.FloatField(default=0.5, help_text='Impact score 0-1')),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('budget', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ai_insights', to='core.budget')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_insights', to='core.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialGoalRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal_type', models.CharField(choices=[('SAVINGS', 'Savings Goal'), ('REVENUE', 'Revenue Target'), ('EXPENSE_REDUCTION', 'Expense Reduction'), ('EMERGENCY_FUND', 'Emergency Fund'), ('INVESTMENT', 'Investment Goal')], max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('target_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('timeframe_months', models.IntegerField(help_text='Recommended timeframe in months')),
                ('why_important', models.TextField(help_text='AI explanation of importance')),
                ('confidence_score', models.FloatField(help_text='AI confidence in recommendation')),
                ('is_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_goal_recommendations', to='core.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialHealthScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(help_text='Score from 0-100')),
                ('factors', models.JSONField(help_text='Breakdown of score factors')),
                ('recommendations', models.JSONField(help_text='AI-generated recommendations')),
                ('strengths', models.JSONField(default=list, help_text='Financial strengths identified')),
                ('concerns', models.JSONField(default=list, help_text='Areas of concern')),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk')], default='MEDIUM', max_length=10)),
                ('calculated_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_scores', to='core.company')),
            ],
            options={
                'ordering': ['-calculated_at'],
                'get_latest_by': 'calculated_at',
            },
        ),
        migrations.CreateModel(
            name='SmartCategorization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence_score', models.FloatField(help_text='Confidence score 0-1')),
                ('reasoning', models.TextField(help_text='AI reasoning for categorization')),
                ('is_accepted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('suggested_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.transactioncategory')),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='ai_categorization', to='core.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PredictionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prediction_type', models.CharField(choices=[('CASH_FLOW', 'Cash Flow'), ('REVENUE', 'Revenue'), ('EXPENSES', 'Expenses'), ('BUDGET_BURN', 'Budget Burn Rate')], max_length=20)),
                ('model_data', models.JSONField(help_text='Trained model parameters')),
                ('accuracy_score', models.FloatField(help_text='Model accuracy score 0-1')),
                ('predictions', models.JSONField(help_text='Future predictions data')),
                ('last_trained', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.company')),
            ],
            options={
                'unique_together': {('company', 'prediction_type')},
            },
        ),
    ]
